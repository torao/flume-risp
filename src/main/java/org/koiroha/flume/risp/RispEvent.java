// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: src/main/protobuf/risp_event.proto

package org.koiroha.flume.risp;

public final class RispEvent {
  private RispEvent() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface FlumeEventOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.koiroha.flume.risp.FlumeEvent)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .org.koiroha.flume.risp.FlumeEvent.HeaderField headers = 1;</code>
     */
    java.util.List<org.koiroha.flume.risp.RispEvent.FlumeEvent.HeaderField> 
        getHeadersList();
    /**
     * <code>repeated .org.koiroha.flume.risp.FlumeEvent.HeaderField headers = 1;</code>
     */
    org.koiroha.flume.risp.RispEvent.FlumeEvent.HeaderField getHeaders(int index);
    /**
     * <code>repeated .org.koiroha.flume.risp.FlumeEvent.HeaderField headers = 1;</code>
     */
    int getHeadersCount();
    /**
     * <code>repeated .org.koiroha.flume.risp.FlumeEvent.HeaderField headers = 1;</code>
     */
    java.util.List<? extends org.koiroha.flume.risp.RispEvent.FlumeEvent.HeaderFieldOrBuilder> 
        getHeadersOrBuilderList();
    /**
     * <code>repeated .org.koiroha.flume.risp.FlumeEvent.HeaderField headers = 1;</code>
     */
    org.koiroha.flume.risp.RispEvent.FlumeEvent.HeaderFieldOrBuilder getHeadersOrBuilder(
        int index);

    /**
     * <code>required bytes body = 2;</code>
     */
    boolean hasBody();
    /**
     * <code>required bytes body = 2;</code>
     */
    com.google.protobuf.ByteString getBody();
  }
  /**
   * Protobuf type {@code org.koiroha.flume.risp.FlumeEvent}
   */
  public static final class FlumeEvent extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:org.koiroha.flume.risp.FlumeEvent)
      FlumeEventOrBuilder {
    // Use FlumeEvent.newBuilder() to construct.
    private FlumeEvent(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private FlumeEvent(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final FlumeEvent defaultInstance;
    public static FlumeEvent getDefaultInstance() {
      return defaultInstance;
    }

    public FlumeEvent getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private FlumeEvent(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                headers_ = new java.util.ArrayList<org.koiroha.flume.risp.RispEvent.FlumeEvent.HeaderField>();
                mutable_bitField0_ |= 0x00000001;
              }
              headers_.add(input.readMessage(org.koiroha.flume.risp.RispEvent.FlumeEvent.HeaderField.PARSER, extensionRegistry));
              break;
            }
            case 18: {
              bitField0_ |= 0x00000001;
              body_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          headers_ = java.util.Collections.unmodifiableList(headers_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.koiroha.flume.risp.RispEvent.internal_static_org_koiroha_flume_risp_FlumeEvent_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.koiroha.flume.risp.RispEvent.internal_static_org_koiroha_flume_risp_FlumeEvent_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.koiroha.flume.risp.RispEvent.FlumeEvent.class, org.koiroha.flume.risp.RispEvent.FlumeEvent.Builder.class);
    }

    public static com.google.protobuf.Parser<FlumeEvent> PARSER =
        new com.google.protobuf.AbstractParser<FlumeEvent>() {
      public FlumeEvent parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new FlumeEvent(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<FlumeEvent> getParserForType() {
      return PARSER;
    }

    public interface HeaderFieldOrBuilder extends
        // @@protoc_insertion_point(interface_extends:org.koiroha.flume.risp.FlumeEvent.HeaderField)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>required string name = 1;</code>
       */
      boolean hasName();
      /**
       * <code>required string name = 1;</code>
       */
      java.lang.String getName();
      /**
       * <code>required string name = 1;</code>
       */
      com.google.protobuf.ByteString
          getNameBytes();

      /**
       * <code>required string value = 2;</code>
       */
      boolean hasValue();
      /**
       * <code>required string value = 2;</code>
       */
      java.lang.String getValue();
      /**
       * <code>required string value = 2;</code>
       */
      com.google.protobuf.ByteString
          getValueBytes();
    }
    /**
     * Protobuf type {@code org.koiroha.flume.risp.FlumeEvent.HeaderField}
     */
    public static final class HeaderField extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:org.koiroha.flume.risp.FlumeEvent.HeaderField)
        HeaderFieldOrBuilder {
      // Use HeaderField.newBuilder() to construct.
      private HeaderField(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private HeaderField(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final HeaderField defaultInstance;
      public static HeaderField getDefaultInstance() {
        return defaultInstance;
      }

      public HeaderField getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private HeaderField(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 10: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000001;
                name_ = bs;
                break;
              }
              case 18: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000002;
                value_ = bs;
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.koiroha.flume.risp.RispEvent.internal_static_org_koiroha_flume_risp_FlumeEvent_HeaderField_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.koiroha.flume.risp.RispEvent.internal_static_org_koiroha_flume_risp_FlumeEvent_HeaderField_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.koiroha.flume.risp.RispEvent.FlumeEvent.HeaderField.class, org.koiroha.flume.risp.RispEvent.FlumeEvent.HeaderField.Builder.class);
      }

      public static com.google.protobuf.Parser<HeaderField> PARSER =
          new com.google.protobuf.AbstractParser<HeaderField>() {
        public HeaderField parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new HeaderField(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<HeaderField> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      public static final int NAME_FIELD_NUMBER = 1;
      private java.lang.Object name_;
      /**
       * <code>required string name = 1;</code>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string name = 1;</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            name_ = s;
          }
          return s;
        }
      }
      /**
       * <code>required string name = 1;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int VALUE_FIELD_NUMBER = 2;
      private java.lang.Object value_;
      /**
       * <code>required string value = 2;</code>
       */
      public boolean hasValue() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string value = 2;</code>
       */
      public java.lang.String getValue() {
        java.lang.Object ref = value_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            value_ = s;
          }
          return s;
        }
      }
      /**
       * <code>required string value = 2;</code>
       */
      public com.google.protobuf.ByteString
          getValueBytes() {
        java.lang.Object ref = value_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          value_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      private void initFields() {
        name_ = "";
        value_ = "";
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        if (!hasName()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasValue()) {
          memoizedIsInitialized = 0;
          return false;
        }
        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeBytes(1, getNameBytes());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeBytes(2, getValueBytes());
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(1, getNameBytes());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(2, getValueBytes());
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static org.koiroha.flume.risp.RispEvent.FlumeEvent.HeaderField parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.koiroha.flume.risp.RispEvent.FlumeEvent.HeaderField parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.koiroha.flume.risp.RispEvent.FlumeEvent.HeaderField parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.koiroha.flume.risp.RispEvent.FlumeEvent.HeaderField parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.koiroha.flume.risp.RispEvent.FlumeEvent.HeaderField parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static org.koiroha.flume.risp.RispEvent.FlumeEvent.HeaderField parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static org.koiroha.flume.risp.RispEvent.FlumeEvent.HeaderField parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static org.koiroha.flume.risp.RispEvent.FlumeEvent.HeaderField parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static org.koiroha.flume.risp.RispEvent.FlumeEvent.HeaderField parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static org.koiroha.flume.risp.RispEvent.FlumeEvent.HeaderField parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(org.koiroha.flume.risp.RispEvent.FlumeEvent.HeaderField prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code org.koiroha.flume.risp.FlumeEvent.HeaderField}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:org.koiroha.flume.risp.FlumeEvent.HeaderField)
          org.koiroha.flume.risp.RispEvent.FlumeEvent.HeaderFieldOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return org.koiroha.flume.risp.RispEvent.internal_static_org_koiroha_flume_risp_FlumeEvent_HeaderField_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return org.koiroha.flume.risp.RispEvent.internal_static_org_koiroha_flume_risp_FlumeEvent_HeaderField_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  org.koiroha.flume.risp.RispEvent.FlumeEvent.HeaderField.class, org.koiroha.flume.risp.RispEvent.FlumeEvent.HeaderField.Builder.class);
        }

        // Construct using org.koiroha.flume.risp.RispEvent.FlumeEvent.HeaderField.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          name_ = "";
          bitField0_ = (bitField0_ & ~0x00000001);
          value_ = "";
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return org.koiroha.flume.risp.RispEvent.internal_static_org_koiroha_flume_risp_FlumeEvent_HeaderField_descriptor;
        }

        public org.koiroha.flume.risp.RispEvent.FlumeEvent.HeaderField getDefaultInstanceForType() {
          return org.koiroha.flume.risp.RispEvent.FlumeEvent.HeaderField.getDefaultInstance();
        }

        public org.koiroha.flume.risp.RispEvent.FlumeEvent.HeaderField build() {
          org.koiroha.flume.risp.RispEvent.FlumeEvent.HeaderField result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public org.koiroha.flume.risp.RispEvent.FlumeEvent.HeaderField buildPartial() {
          org.koiroha.flume.risp.RispEvent.FlumeEvent.HeaderField result = new org.koiroha.flume.risp.RispEvent.FlumeEvent.HeaderField(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.name_ = name_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.value_ = value_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof org.koiroha.flume.risp.RispEvent.FlumeEvent.HeaderField) {
            return mergeFrom((org.koiroha.flume.risp.RispEvent.FlumeEvent.HeaderField)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(org.koiroha.flume.risp.RispEvent.FlumeEvent.HeaderField other) {
          if (other == org.koiroha.flume.risp.RispEvent.FlumeEvent.HeaderField.getDefaultInstance()) return this;
          if (other.hasName()) {
            bitField0_ |= 0x00000001;
            name_ = other.name_;
            onChanged();
          }
          if (other.hasValue()) {
            bitField0_ |= 0x00000002;
            value_ = other.value_;
            onChanged();
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          if (!hasName()) {
            
            return false;
          }
          if (!hasValue()) {
            
            return false;
          }
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          org.koiroha.flume.risp.RispEvent.FlumeEvent.HeaderField parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (org.koiroha.flume.risp.RispEvent.FlumeEvent.HeaderField) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private java.lang.Object name_ = "";
        /**
         * <code>required string name = 1;</code>
         */
        public boolean hasName() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>required string name = 1;</code>
         */
        public java.lang.String getName() {
          java.lang.Object ref = name_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              name_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>required string name = 1;</code>
         */
        public com.google.protobuf.ByteString
            getNameBytes() {
          java.lang.Object ref = name_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            name_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>required string name = 1;</code>
         */
        public Builder setName(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          name_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required string name = 1;</code>
         */
        public Builder clearName() {
          bitField0_ = (bitField0_ & ~0x00000001);
          name_ = getDefaultInstance().getName();
          onChanged();
          return this;
        }
        /**
         * <code>required string name = 1;</code>
         */
        public Builder setNameBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          name_ = value;
          onChanged();
          return this;
        }

        private java.lang.Object value_ = "";
        /**
         * <code>required string value = 2;</code>
         */
        public boolean hasValue() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>required string value = 2;</code>
         */
        public java.lang.String getValue() {
          java.lang.Object ref = value_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              value_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>required string value = 2;</code>
         */
        public com.google.protobuf.ByteString
            getValueBytes() {
          java.lang.Object ref = value_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            value_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>required string value = 2;</code>
         */
        public Builder setValue(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          value_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required string value = 2;</code>
         */
        public Builder clearValue() {
          bitField0_ = (bitField0_ & ~0x00000002);
          value_ = getDefaultInstance().getValue();
          onChanged();
          return this;
        }
        /**
         * <code>required string value = 2;</code>
         */
        public Builder setValueBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          value_ = value;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:org.koiroha.flume.risp.FlumeEvent.HeaderField)
      }

      static {
        defaultInstance = new HeaderField(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:org.koiroha.flume.risp.FlumeEvent.HeaderField)
    }

    private int bitField0_;
    public static final int HEADERS_FIELD_NUMBER = 1;
    private java.util.List<org.koiroha.flume.risp.RispEvent.FlumeEvent.HeaderField> headers_;
    /**
     * <code>repeated .org.koiroha.flume.risp.FlumeEvent.HeaderField headers = 1;</code>
     */
    public java.util.List<org.koiroha.flume.risp.RispEvent.FlumeEvent.HeaderField> getHeadersList() {
      return headers_;
    }
    /**
     * <code>repeated .org.koiroha.flume.risp.FlumeEvent.HeaderField headers = 1;</code>
     */
    public java.util.List<? extends org.koiroha.flume.risp.RispEvent.FlumeEvent.HeaderFieldOrBuilder> 
        getHeadersOrBuilderList() {
      return headers_;
    }
    /**
     * <code>repeated .org.koiroha.flume.risp.FlumeEvent.HeaderField headers = 1;</code>
     */
    public int getHeadersCount() {
      return headers_.size();
    }
    /**
     * <code>repeated .org.koiroha.flume.risp.FlumeEvent.HeaderField headers = 1;</code>
     */
    public org.koiroha.flume.risp.RispEvent.FlumeEvent.HeaderField getHeaders(int index) {
      return headers_.get(index);
    }
    /**
     * <code>repeated .org.koiroha.flume.risp.FlumeEvent.HeaderField headers = 1;</code>
     */
    public org.koiroha.flume.risp.RispEvent.FlumeEvent.HeaderFieldOrBuilder getHeadersOrBuilder(
        int index) {
      return headers_.get(index);
    }

    public static final int BODY_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString body_;
    /**
     * <code>required bytes body = 2;</code>
     */
    public boolean hasBody() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required bytes body = 2;</code>
     */
    public com.google.protobuf.ByteString getBody() {
      return body_;
    }

    private void initFields() {
      headers_ = java.util.Collections.emptyList();
      body_ = com.google.protobuf.ByteString.EMPTY;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasBody()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getHeadersCount(); i++) {
        if (!getHeaders(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < headers_.size(); i++) {
        output.writeMessage(1, headers_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(2, body_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < headers_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, headers_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, body_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.koiroha.flume.risp.RispEvent.FlumeEvent parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.koiroha.flume.risp.RispEvent.FlumeEvent parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.koiroha.flume.risp.RispEvent.FlumeEvent parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.koiroha.flume.risp.RispEvent.FlumeEvent parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.koiroha.flume.risp.RispEvent.FlumeEvent parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.koiroha.flume.risp.RispEvent.FlumeEvent parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.koiroha.flume.risp.RispEvent.FlumeEvent parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.koiroha.flume.risp.RispEvent.FlumeEvent parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.koiroha.flume.risp.RispEvent.FlumeEvent parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.koiroha.flume.risp.RispEvent.FlumeEvent parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.koiroha.flume.risp.RispEvent.FlumeEvent prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.koiroha.flume.risp.FlumeEvent}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.koiroha.flume.risp.FlumeEvent)
        org.koiroha.flume.risp.RispEvent.FlumeEventOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.koiroha.flume.risp.RispEvent.internal_static_org_koiroha_flume_risp_FlumeEvent_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.koiroha.flume.risp.RispEvent.internal_static_org_koiroha_flume_risp_FlumeEvent_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.koiroha.flume.risp.RispEvent.FlumeEvent.class, org.koiroha.flume.risp.RispEvent.FlumeEvent.Builder.class);
      }

      // Construct using org.koiroha.flume.risp.RispEvent.FlumeEvent.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getHeadersFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (headersBuilder_ == null) {
          headers_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          headersBuilder_.clear();
        }
        body_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.koiroha.flume.risp.RispEvent.internal_static_org_koiroha_flume_risp_FlumeEvent_descriptor;
      }

      public org.koiroha.flume.risp.RispEvent.FlumeEvent getDefaultInstanceForType() {
        return org.koiroha.flume.risp.RispEvent.FlumeEvent.getDefaultInstance();
      }

      public org.koiroha.flume.risp.RispEvent.FlumeEvent build() {
        org.koiroha.flume.risp.RispEvent.FlumeEvent result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.koiroha.flume.risp.RispEvent.FlumeEvent buildPartial() {
        org.koiroha.flume.risp.RispEvent.FlumeEvent result = new org.koiroha.flume.risp.RispEvent.FlumeEvent(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (headersBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            headers_ = java.util.Collections.unmodifiableList(headers_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.headers_ = headers_;
        } else {
          result.headers_ = headersBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000001;
        }
        result.body_ = body_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.koiroha.flume.risp.RispEvent.FlumeEvent) {
          return mergeFrom((org.koiroha.flume.risp.RispEvent.FlumeEvent)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.koiroha.flume.risp.RispEvent.FlumeEvent other) {
        if (other == org.koiroha.flume.risp.RispEvent.FlumeEvent.getDefaultInstance()) return this;
        if (headersBuilder_ == null) {
          if (!other.headers_.isEmpty()) {
            if (headers_.isEmpty()) {
              headers_ = other.headers_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureHeadersIsMutable();
              headers_.addAll(other.headers_);
            }
            onChanged();
          }
        } else {
          if (!other.headers_.isEmpty()) {
            if (headersBuilder_.isEmpty()) {
              headersBuilder_.dispose();
              headersBuilder_ = null;
              headers_ = other.headers_;
              bitField0_ = (bitField0_ & ~0x00000001);
              headersBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getHeadersFieldBuilder() : null;
            } else {
              headersBuilder_.addAllMessages(other.headers_);
            }
          }
        }
        if (other.hasBody()) {
          setBody(other.getBody());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasBody()) {
          
          return false;
        }
        for (int i = 0; i < getHeadersCount(); i++) {
          if (!getHeaders(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.koiroha.flume.risp.RispEvent.FlumeEvent parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.koiroha.flume.risp.RispEvent.FlumeEvent) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<org.koiroha.flume.risp.RispEvent.FlumeEvent.HeaderField> headers_ =
        java.util.Collections.emptyList();
      private void ensureHeadersIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          headers_ = new java.util.ArrayList<org.koiroha.flume.risp.RispEvent.FlumeEvent.HeaderField>(headers_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          org.koiroha.flume.risp.RispEvent.FlumeEvent.HeaderField, org.koiroha.flume.risp.RispEvent.FlumeEvent.HeaderField.Builder, org.koiroha.flume.risp.RispEvent.FlumeEvent.HeaderFieldOrBuilder> headersBuilder_;

      /**
       * <code>repeated .org.koiroha.flume.risp.FlumeEvent.HeaderField headers = 1;</code>
       */
      public java.util.List<org.koiroha.flume.risp.RispEvent.FlumeEvent.HeaderField> getHeadersList() {
        if (headersBuilder_ == null) {
          return java.util.Collections.unmodifiableList(headers_);
        } else {
          return headersBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .org.koiroha.flume.risp.FlumeEvent.HeaderField headers = 1;</code>
       */
      public int getHeadersCount() {
        if (headersBuilder_ == null) {
          return headers_.size();
        } else {
          return headersBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .org.koiroha.flume.risp.FlumeEvent.HeaderField headers = 1;</code>
       */
      public org.koiroha.flume.risp.RispEvent.FlumeEvent.HeaderField getHeaders(int index) {
        if (headersBuilder_ == null) {
          return headers_.get(index);
        } else {
          return headersBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .org.koiroha.flume.risp.FlumeEvent.HeaderField headers = 1;</code>
       */
      public Builder setHeaders(
          int index, org.koiroha.flume.risp.RispEvent.FlumeEvent.HeaderField value) {
        if (headersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureHeadersIsMutable();
          headers_.set(index, value);
          onChanged();
        } else {
          headersBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .org.koiroha.flume.risp.FlumeEvent.HeaderField headers = 1;</code>
       */
      public Builder setHeaders(
          int index, org.koiroha.flume.risp.RispEvent.FlumeEvent.HeaderField.Builder builderForValue) {
        if (headersBuilder_ == null) {
          ensureHeadersIsMutable();
          headers_.set(index, builderForValue.build());
          onChanged();
        } else {
          headersBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.koiroha.flume.risp.FlumeEvent.HeaderField headers = 1;</code>
       */
      public Builder addHeaders(org.koiroha.flume.risp.RispEvent.FlumeEvent.HeaderField value) {
        if (headersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureHeadersIsMutable();
          headers_.add(value);
          onChanged();
        } else {
          headersBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .org.koiroha.flume.risp.FlumeEvent.HeaderField headers = 1;</code>
       */
      public Builder addHeaders(
          int index, org.koiroha.flume.risp.RispEvent.FlumeEvent.HeaderField value) {
        if (headersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureHeadersIsMutable();
          headers_.add(index, value);
          onChanged();
        } else {
          headersBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .org.koiroha.flume.risp.FlumeEvent.HeaderField headers = 1;</code>
       */
      public Builder addHeaders(
          org.koiroha.flume.risp.RispEvent.FlumeEvent.HeaderField.Builder builderForValue) {
        if (headersBuilder_ == null) {
          ensureHeadersIsMutable();
          headers_.add(builderForValue.build());
          onChanged();
        } else {
          headersBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.koiroha.flume.risp.FlumeEvent.HeaderField headers = 1;</code>
       */
      public Builder addHeaders(
          int index, org.koiroha.flume.risp.RispEvent.FlumeEvent.HeaderField.Builder builderForValue) {
        if (headersBuilder_ == null) {
          ensureHeadersIsMutable();
          headers_.add(index, builderForValue.build());
          onChanged();
        } else {
          headersBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.koiroha.flume.risp.FlumeEvent.HeaderField headers = 1;</code>
       */
      public Builder addAllHeaders(
          java.lang.Iterable<? extends org.koiroha.flume.risp.RispEvent.FlumeEvent.HeaderField> values) {
        if (headersBuilder_ == null) {
          ensureHeadersIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, headers_);
          onChanged();
        } else {
          headersBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .org.koiroha.flume.risp.FlumeEvent.HeaderField headers = 1;</code>
       */
      public Builder clearHeaders() {
        if (headersBuilder_ == null) {
          headers_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          headersBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .org.koiroha.flume.risp.FlumeEvent.HeaderField headers = 1;</code>
       */
      public Builder removeHeaders(int index) {
        if (headersBuilder_ == null) {
          ensureHeadersIsMutable();
          headers_.remove(index);
          onChanged();
        } else {
          headersBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .org.koiroha.flume.risp.FlumeEvent.HeaderField headers = 1;</code>
       */
      public org.koiroha.flume.risp.RispEvent.FlumeEvent.HeaderField.Builder getHeadersBuilder(
          int index) {
        return getHeadersFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .org.koiroha.flume.risp.FlumeEvent.HeaderField headers = 1;</code>
       */
      public org.koiroha.flume.risp.RispEvent.FlumeEvent.HeaderFieldOrBuilder getHeadersOrBuilder(
          int index) {
        if (headersBuilder_ == null) {
          return headers_.get(index);  } else {
          return headersBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .org.koiroha.flume.risp.FlumeEvent.HeaderField headers = 1;</code>
       */
      public java.util.List<? extends org.koiroha.flume.risp.RispEvent.FlumeEvent.HeaderFieldOrBuilder> 
           getHeadersOrBuilderList() {
        if (headersBuilder_ != null) {
          return headersBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(headers_);
        }
      }
      /**
       * <code>repeated .org.koiroha.flume.risp.FlumeEvent.HeaderField headers = 1;</code>
       */
      public org.koiroha.flume.risp.RispEvent.FlumeEvent.HeaderField.Builder addHeadersBuilder() {
        return getHeadersFieldBuilder().addBuilder(
            org.koiroha.flume.risp.RispEvent.FlumeEvent.HeaderField.getDefaultInstance());
      }
      /**
       * <code>repeated .org.koiroha.flume.risp.FlumeEvent.HeaderField headers = 1;</code>
       */
      public org.koiroha.flume.risp.RispEvent.FlumeEvent.HeaderField.Builder addHeadersBuilder(
          int index) {
        return getHeadersFieldBuilder().addBuilder(
            index, org.koiroha.flume.risp.RispEvent.FlumeEvent.HeaderField.getDefaultInstance());
      }
      /**
       * <code>repeated .org.koiroha.flume.risp.FlumeEvent.HeaderField headers = 1;</code>
       */
      public java.util.List<org.koiroha.flume.risp.RispEvent.FlumeEvent.HeaderField.Builder> 
           getHeadersBuilderList() {
        return getHeadersFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          org.koiroha.flume.risp.RispEvent.FlumeEvent.HeaderField, org.koiroha.flume.risp.RispEvent.FlumeEvent.HeaderField.Builder, org.koiroha.flume.risp.RispEvent.FlumeEvent.HeaderFieldOrBuilder> 
          getHeadersFieldBuilder() {
        if (headersBuilder_ == null) {
          headersBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              org.koiroha.flume.risp.RispEvent.FlumeEvent.HeaderField, org.koiroha.flume.risp.RispEvent.FlumeEvent.HeaderField.Builder, org.koiroha.flume.risp.RispEvent.FlumeEvent.HeaderFieldOrBuilder>(
                  headers_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          headers_ = null;
        }
        return headersBuilder_;
      }

      private com.google.protobuf.ByteString body_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>required bytes body = 2;</code>
       */
      public boolean hasBody() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required bytes body = 2;</code>
       */
      public com.google.protobuf.ByteString getBody() {
        return body_;
      }
      /**
       * <code>required bytes body = 2;</code>
       */
      public Builder setBody(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        body_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bytes body = 2;</code>
       */
      public Builder clearBody() {
        bitField0_ = (bitField0_ & ~0x00000002);
        body_ = getDefaultInstance().getBody();
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.koiroha.flume.risp.FlumeEvent)
    }

    static {
      defaultInstance = new FlumeEvent(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.koiroha.flume.risp.FlumeEvent)
  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_koiroha_flume_risp_FlumeEvent_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_koiroha_flume_risp_FlumeEvent_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_koiroha_flume_risp_FlumeEvent_HeaderField_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_koiroha_flume_risp_FlumeEvent_HeaderField_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\"src/main/protobuf/risp_event.proto\022\026or" +
      "g.koiroha.flume.risp\"\207\001\n\nFlumeEvent\022?\n\007h" +
      "eaders\030\001 \003(\0132..org.koiroha.flume.risp.Fl" +
      "umeEvent.HeaderField\022\014\n\004body\030\002 \002(\014\032*\n\013He" +
      "aderField\022\014\n\004name\030\001 \002(\t\022\r\n\005value\030\002 \002(\t"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_org_koiroha_flume_risp_FlumeEvent_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_org_koiroha_flume_risp_FlumeEvent_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_org_koiroha_flume_risp_FlumeEvent_descriptor,
        new java.lang.String[] { "Headers", "Body", });
    internal_static_org_koiroha_flume_risp_FlumeEvent_HeaderField_descriptor =
      internal_static_org_koiroha_flume_risp_FlumeEvent_descriptor.getNestedTypes().get(0);
    internal_static_org_koiroha_flume_risp_FlumeEvent_HeaderField_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_org_koiroha_flume_risp_FlumeEvent_HeaderField_descriptor,
        new java.lang.String[] { "Name", "Value", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
